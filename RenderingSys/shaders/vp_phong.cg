// geometric input (sent by application)


struct appin
{
  float4 position     : POSITION;
  float3 normal       : NORMAL;
  float3 color         : COLOR0;
  float2 texCoord		: TEXCOORD0;
  float3 tex3DCoord		: TEXCOORD1;
};

// vertex program output

struct V2FI
{
  float4 oPosition 		: POSITION;
  float2 oTexCoord		: TEXCOORD0;
  float3 oTex3DCoord	: TEXCOORD1;
  float3 objectPos 		: TEXCOORD2;
  float3 oNormal   		: TEXCOORD3;
  float3 oColor			: COLOR0;
};

V2FI main(appin IN)
{
  V2FI OUT;

  OUT.oTexCoord = IN.texCoord;
  OUT.oTex3DCoord = IN.tex3DCoord;

  // project point onto screen
  OUT.oPosition = mul(glstate.matrix.mvp, IN.position);

  // copy position
  OUT.objectPos = IN.position.xyz;

  // copy Normal
  OUT.oNormal = IN.normal;

  float3 red = float3(1.0, 0.0, 0.0);
  float3 green = float3(0.0, 1.0, 0.0);
  float3 blue = float3(0.0, 0.0, 1.0);
  float3 yellow = float3(1.0, 1.0, 0.0);
  float3 magenta = float3(1.0, 0.0, 1.0);
/*
  // --------------------------------------
  int test = (int) colorIdx;
  // --------------------------------------
  if (test == 2)
  	OUT.oColor = red;
  else if (test > 10)
  	OUT.oColor = green;
  else if (test == 1)
  	OUT.oColor = blue;
  else
  	OUT.oColor = yellow;
*/

//  OUT.oColor = IN.color;

  return OUT;
}



















